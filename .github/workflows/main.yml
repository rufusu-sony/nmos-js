name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '10', '12' ]

    steps:
    - uses: actions/checkout@v1
    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}

    - name: Get yarn cache
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v1
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: yarn install
      working-directory: ./Development
    - name: Check lint
      run: yarn run lint-check
      working-directory: ./Development
    - name: Build for production
      run: yarn run build
      working-directory: ./Development

  docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Build docker image
        run: docker build -t nmos-js Development
      - name: Compress image
        run: |
          mkdir ../artifacts
          docker save nmos-js | gzip -c > ../artifacts/nmos-js.tar.gz
      - uses: actions/upload-artifact@v1
        with:
          name: nmos-js-$(git rev-parse --short "$GITHUB_SHA")
          path: ../artifacts
